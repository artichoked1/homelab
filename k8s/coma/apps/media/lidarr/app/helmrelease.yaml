apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImageRepository
metadata:
  name: lidarr
  namespace: ${NAMESPACE}
spec:
  image: ghcr.io/linuxserver-labs/prarr
  interval: 5m
---
apiVersion: image.toolkit.fluxcd.io/v1beta2
kind: ImagePolicy
metadata:
  name: lidarr
  namespace: ${NAMESPACE}
spec:
  imageRepositoryRef:
    name: lidarr
  filterTags:
    pattern: '^lidarr-plugins-(?P<maj>\d+)\.(?P<min>\d+)\.(?P<patch>\d+)\.(?P<build>\d+)$'
    extract: "$maj.$min.$patch-$build"
  policy:
    semver:
      range: ">=2.0.0-0 <3.0.0-0"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP}
  namespace: ${NAMESPACE}
spec:
  chart:
    spec:
      chart: app-template
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 3.2.1
  interval: 1m0s
  values:
    controllers:
      main:
        strategy: Recreate

        containers:
          main:
            image:
              repository: ghcr.io/linuxserver-labs/prarr # {"$imagepolicy": "media:lidarr:name"}
              tag: lidarr-plugins-2.13.3.4692 # {"$imagepolicy": "media:lidarr:tag"}
              pullPolicy: IfNotPresent

    service:
      main:
        controller: main
        ports:
          http:
            port: 8686

    persistence:
      data:
        storageClass: "longhorn"
        accessMode: ReadWriteOnce
        size: 1Gi
        globalMounts:
          - path: /config
      music:
        existingClaim: lidarr-media-pvc
        globalMounts:
          - path: /media
